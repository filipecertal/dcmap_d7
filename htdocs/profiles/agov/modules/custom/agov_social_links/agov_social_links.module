<?php

/**
 * @file
 * Provides core functionality for agov_social_links.
 */

/**
 * Define the facebook default.
 */
define('AGOV_SOCIAL_LINKS_FACEBOOK_DEFAULT', 'http://www.facebook.com/pages/PreviousNext/170975076260877');

/**
 * Define the twitter default.
 */
define('AGOV_SOCIAL_LINKS_TWITTER_DEFAULT', 'http://www.twitter.com/PreviousNext');

/**
 * Define the youtube default.
 */
define('AGOV_SOCIAL_LINKS_YOUTUBE_DEFAULT', '');

/**
 * Define the linkedin default.
 */
define('AGOV_SOCIAL_LINKS_LINKEDIN_DEFAULT', '');

/**
 * Define the Vimeo default.
 */
define('AGOV_SOCIAL_LINKS_VIMEO_DEFAULT', '');

/**
 * Define the flickr default.
 */
define('AGOV_SOCIAL_LINKS_FLICKR_DEFAULT', '');

/**
 * Define the RSS default.
 */
define('AGOV_SOCIAL_LINKS_RSS_DEFAULT', 'rss.xml');

/**
 * Define the contact default.
 */
define('AGOV_SOCIAL_LINKS_EMAIL_DEFAULT', 'contact');

/**
 * Returns a list of the social services.
 */
function agov_social_links_services_list() {
  return array(
    'facebook',
    'twitter',
    'youtube',
    'linkedin',
    'vimeo',
    'flickr',
    'rss',
    'email',
  );
}

/**
 * Returns a font awesome by services.
 */
function agov_social_links_get_fontawesome($service) {
  $social_font = array(
    'facebook' => 'fa-facebook',
    'twitter' => 'fa-twitter',
    'youtube' => 'fa-youtube',
    'linkedin' => 'fa-linkedin',
    'vimeo' => 'fa-vimeo-square',
    'flickr' => 'fa-flickr',
    'rss' => 'fa-rss',
    'email' => 'fa-envelope',
  );

  drupal_alter('agov_social_links_fontawesome', $social_font, $service);

  return isset($social_font[$service]) ? $social_font[$service] : $service;
}

/**
 * Implements hook_block_info().
 */
function agov_social_links_block_info() {
  $blocks = array();

  $blocks['services'] = array(
    'info' => t('Social links'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function agov_social_links_block_configure($delta = '') {
  $services = agov_social_links_services_list();

  $form = array();
  if ($delta == 'services') {
    $form['social_links'] = array(
      '#type' => 'fieldset',
      '#title' => t('Social media service links'),
      '#description' => 'Enter your social media service links. You may enter: <ul><li>Absolute urls, i.e. "http://www.facebook.com/yourpage"</li><li>Relative urls to internal pages, i.e. "contact"</li><li>mailto: links, i.e. "mailto:youremail@address.com"</li></ul> Services left blank will not show on the block.',
    );

    foreach ($services as $service) {
      // Load default value for service.
      $service_default = constant('AGOV_SOCIAL_LINKS_' . strtoupper($service) . '_DEFAULT');

      // Create a human readable service title.
      $service_title = ucfirst($service);
      switch ($service) {
        case 'rss':
          $service_title = 'RSS Feed';
          break;

        case 'email':
          $service_title = 'Email address or Contact';
          break;
      }

      // Create an input field for each service url.
      $form['social_links'][$service] = array(
        '#type' => 'textfield',
        '#title' => $service_title . ' ' . t('URL'),
        '#size' => 100,
        '#maxlength' => 255,
        '#default_value' => variable_get('agov_social_links_' . $service, $service_default),
      );
    }
  }

  return $form;
}


/**
 * Implements hook_block_save().
 */
function agov_social_links_block_save($delta = '', $edit = array()) {
  $services = agov_social_links_services_list();

  if ($delta == 'services') {
    foreach ($services as $service) {
      variable_set('agov_social_links_' . $service, $edit[$service]);
    }
  }
}

/**
 * Implements hook_block_view().
 */
function agov_social_links_block_view($delta = '') {
  $services = agov_social_links_services_list();

  $block = array();
  switch ($delta) {
    case 'services':
      $block['subject'] = t('Stay up to date');
      $block['content'] = '';
      $items = array();

      foreach ($services as $service) {
        $service_default = constant('AGOV_SOCIAL_LINKS_' . strtoupper($service) . '_DEFAULT');
        $service_url = variable_get('agov_social_links_' . $service, $service_default);

        if (!empty($service_url)) {
          // Create a human readable name for the service.
          $service_title = 'Connect with us on ' . ucfirst($service);
          switch ($service) {
            case 'facebook':
              $service_title = 'Like us on Facebook';
              break;

            case 'twitter':
              $service_title = 'Follow us on Twitter';
              break;

            case 'rss':
              $service_title = 'Subscribe to our RSS Feed';
              break;

            case 'email':
              $service_title = 'Send us a message';
              break;
          }

          // Get font awesome for service.
          $icon = agov_social_links_get_fontawesome($service);

          $link = array(
            '#theme' => 'link',
            '#path' => $service_url,
            '#text' => '<span class="fa ' . $icon . '" aria-hidden="true"></span><span class="element-invisible">' . $service_title . '</span>',
            '#options' => array(
              'attributes' => array(),
              'html' => TRUE,
            ),
          );

          $items[$service] = array(
            'data' => drupal_render($link),
            'class' => array('social__item'),
          );
        }
      }

      if (!empty($items)) {
        $block['content'] = array(
          '#theme' => 'item_list',
          '#items' => $items,
          '#type' => 'ul',
          '#attributes' => array('class' => array('social__list')),
        );
      }

      break;
  }

  return $block;
}
