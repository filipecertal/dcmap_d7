<?php

require_once(__DIR__ . '/../src/Funnelback/FacetItem.php');
require_once(__DIR__ . '/../src/Funnelback/Facet.php');
require_once(__DIR__ . '/../src/Funnelback/Result.php');
require_once(__DIR__ . '/../src/Funnelback/ResultSummary.php');
require_once(__DIR__ . '/../src/Funnelback/Response.php');
require_once(__DIR__ . '/../src/Funnelback/ClientInterface.php');
require_once(__DIR__ . '/../src/Funnelback/DrupalClient.php');


/**
 * Class for testing index and search capabilities using the Funnelback api.
 */
class FunnelbackApiTest extends DrupalUnitTestCase {

  static function getInfo() {
    return array(
      'name' => 'Funnelback API ',
      'description' => 'Tests the Funnelback API embedded in the Funnelback module',
      'group' => 'Funnelback',
    );
  }

  public function setUp() {
    parent::setUp();
  }

  public function testPoke() {
    $client = new Funnelback\DrupalClient(array(
      'base_url' => 'http://agencysearch.australia.gov.au',
      'collection' => 'agencies',
    ));

    $client->search('blink');
  }


  public function testResponse() {
    $filename = __DIR__ . '/search-results.json';
    $handle = fopen($filename, "r");
    $json = fread($handle, filesize($filename));
    fclose($handle);

    $http_mock_result = new stdClass();
    $http_mock_result->data =$json;

    $base_url = 'http://agencysearch.australia.gov.au';

    $response = new Funnelback\Response($base_url, $http_mock_result);

    // Check the response.
    $this->assertEqual(0, $response->getReturnCode(), 'Return code ok');
    $this->assertEqual('form', $response->getQuery(), 'Query matches');
    $this->assertEqual(408, $response->getTotalTimeMillis(), 'Total time millis matches');

    // Check the summary.
    $summary = $response->getResultsSummary();
    $this->assertEqual(1, $summary->getStart(), 'Start matches');
    $this->assertEqual(10, $summary->getEnd(), 'End matches');
    $this->assertEqual(10, $summary->getPageSize(), 'Page size matches');
    $this->assertEqual(17632, $summary->getTotal(), 'Total matches');

    // Check the results.
    $results = $response->getResults();

    $this->assertFalse(empty($results), "Results are found");

    // Check an individual result.
    $result = $results[0];

    $this->assertEqual('Forms', $result->getTitle(), 'Title matches');
    $this->assertEqual('Forms. We provide electronic and printable forms that you can download, complete and return to us. ... An A to Z list by name of forms for Centrelink, Child Support and Medicare.', $result->getSummary(), 'Summary matches');
    $this->assertEqual('2014-10-27', $result->getDate()
      ->format('Y-m-d'), 'Date matches');
    $this->assertEqual('http://cache-au.funnelback.com/search/cache.cgi?collection=fed-gov&doc=funnelback-web-crawl.warc&off=27605782&len=6529&url=http%3A%2F%2Fwww.humanservices.gov.au%2Fcustomer%2Fforms%2F&profile=_default', $result->getCacheUrl(), 'Cache URL matches');
    $this->assertEqual('/search/click.cgi?rank=1&collection=agencies&url=http%3A%2F%2Fwww.humanservices.gov.au%2Fcustomer%2Fforms%2F&index_url=http%3A%2F%2Fwww.humanservices.gov.au%2Fcustomer%2Fforms%2F&auth=1gCsYnROvefyAqpyeyY78g&query=form&profile=_default', $result->getClickUrl(), 'Click URL matches');
    $this->assertEqual('http://www.humanservices.gov.au/customer/forms/', $result->getLiveUrl(), 'Live URL matches');

    // Check the facets.
    $facets = $response->getFacets();

    $this->assertFalse(empty($facets), "Facets were found");

    // Check a facet.
    $facet = $facets[0];

    $this->assertEqual('Keyword', $facet->getName(), 'The name matches');

    $facet_items = $facet->getFacetItems();
    $this->assertFalse(empty($facet_items), "Facet items are not empty");

    // Check a facet item.
    $facet_item = $facet_items[0];

    $this->assertEqual('13. Year books and other multi-subject products', $facet_item->getLabel(), 'Label matches');
    $this->assertEqual(7353, $facet_item->getCount(), 'Count matches');
    $this->assertEqual('f.Keyword%7Cs=13.+Year+books+and+other+multi-subject+products', $facet_item->getQueryStringParam(), 'Query string param matches');
  }

}
